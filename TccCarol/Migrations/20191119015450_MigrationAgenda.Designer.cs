// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TccCarol.Dados;

namespace TccCarol.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20191119015450_MigrationAgenda")]
    partial class MigrationAgenda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TccCarol.Dados.Configuracao.Agenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<string>("Descricao")
                        .HasColumnType("Text");

                    b.Property<string>("Titulo");

                    b.Property<Guid>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.ClienteFornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Fornecedor");

                    b.Property<string>("Nome");

                    b.Property<string>("Numero");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ClientesFornecedores");
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.HistoricoCompraVenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClienteFornecedorId");

                    b.Property<DateTime>("Data");

                    b.Property<string>("Observacao");

                    b.Property<decimal>("Preco");

                    b.Property<Guid>("ProdutoId");

                    b.Property<int>("Quantidade");

                    b.Property<bool>("Venda");

                    b.HasKey("Id");

                    b.HasIndex("ClienteFornecedorId");

                    b.HasIndex("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("HistoricosCompraVenda");
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.HistoricoDespesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<string>("Observacao");

                    b.Property<bool>("Porcentagem");

                    b.Property<Guid>("TipoDespesaId");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("TipoDespesaId");

                    b.ToTable("HistoricosDespesa");
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.IngredienteProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IngredienteId");

                    b.Property<Guid>("ProdutoId");

                    b.Property<decimal>("Quantidade");

                    b.Property<int>("TipoMedida");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("IngredienteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("IngredienteProduto");
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estoque");

                    b.Property<Guid?>("FornecedorId");

                    b.Property<bool>("Ingrediente");

                    b.Property<string>("Nome");

                    b.Property<decimal>("OutrasDespesas");

                    b.Property<decimal>("PrecoAtual");

                    b.Property<int>("QuantidadeFabrica");

                    b.Property<int>("TipoMedida");

                    b.Property<int>("TipoMedidaPreco");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.TipoDespesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.Property<string>("Observacao");

                    b.Property<decimal>("ValorFixo");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("TiposDespesas");
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.HistoricoCompraVenda", b =>
                {
                    b.HasOne("TccCarol.Dados.Configuracao.ClienteFornecedor", "ClienteFornecedor")
                        .WithMany("HistoricosCompraVenda")
                        .HasForeignKey("ClienteFornecedorId");

                    b.HasOne("TccCarol.Dados.Configuracao.Produto", "Produto")
                        .WithMany("HistoricosCompraVenda")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.HistoricoDespesa", b =>
                {
                    b.HasOne("TccCarol.Dados.Configuracao.TipoDespesa", "TipoDespesa")
                        .WithMany("HistoricosDespesa")
                        .HasForeignKey("TipoDespesaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.IngredienteProduto", b =>
                {
                    b.HasOne("TccCarol.Dados.Configuracao.Produto", "Ingrediente")
                        .WithMany("Produtos")
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TccCarol.Dados.Configuracao.Produto", "Produto")
                        .WithMany("Ingredientes")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TccCarol.Dados.Configuracao.Produto", b =>
                {
                    b.HasOne("TccCarol.Dados.Configuracao.ClienteFornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId");
                });
#pragma warning restore 612, 618
        }
    }
}
